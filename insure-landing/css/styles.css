:root{

    --darkViolet: hsl(256, 26%, 20%);
    --grayishBlue: hsl(216, 30%, 68%);
    --veryDarkViolet: hsl(270, 9%, 17%);
    --darkGrayishViolet: hsl(273, 4%, 51%);
    --veryLightGray: hsl(0, 0%, 98%);

    --font1:'DM Serif Display', serif;
    --font2:'Karla', sans-serif;

    --paddingContainer: 80px 0; /*80px arriba y cero hacia los lados*/

    scroll-padding-top: 80px; /*arregla que al dar en el menu hambugguesa este baje hacia abajo*/

}

*{
    box-sizing: border-box;
    margin: 0;
}

body{
    font-family: var(--font2);
}

.container{
    max-width: 1200px;
    width: 90%;
    margin: 0 auto;
    overflow: hidden;
    padding: var(--paddingContainer);
}

.hero{
    background-color: var(--darkViolet); /*Contiene a todo, su fondo es violeta*/
    color: #fff;
    --paddingContainer: 0;
}

.nav{
    background-color: #fff; /*este es blanco y cubre el color violeta previo del hero*/
}

.nav__container{
    height: 80px;
    display: flex;
    align-items: center; /*centro los elementos horizontalmente*/
    justify-content: space-between;
}

.nav__links:target{
    clip-path: circle(150% at top left);
}

/* cuando nav links esté siendo apuntado, quiero que seleccione a su hermano nav__hamburguer--last( mediante virgulilla ~ ) */
.nav__links:target ~ .nav__hamburguer--last{
    display: block;
}

/* En moviles no es visible los links, a menos que se haga visible mediante el btn hamburguer*/
.nav__links{
    position: absolute;
    top: 80px;
    bottom: 0; /*Esto hará que se extienda hasta abajo del viewport*/
    /* Que vaya de izquierda a derecha con las reglas left: 0; right: 0;*/
    left: 0; 
    right: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
    padding-top: 3rem;
    background-color: #000;
    clip-path: circle(0% at top left);

    /* Transicion de .4s para clip-path*/
    transition: .4s clip-path;
}

.nav__link{
    text-decoration: none;
    color: #fff;
    text-transform: uppercase;
    font-weight: 700;    
}

.nav__link--cta{
    color: #fff;
    border: 1px solid var(--veryDarkViolet);
    padding: .8rem 2rem; /*.8 rem arriba/abajo y 2rem a los costados*/
}


/* Para que salga del flujo de flexbox */
.nav__hamburguer--last{
    display: none;
    position: absolute;
    right: 5%;
    top: 24px;
}

.nav__icon,
.nav__logo{
    display: block; /*Los convierto a bloque y de paso se elimina el margen inferior*/
}

.hero__main{
    width: 100%; /*tiene un hijo (vendria siendo la imagen, que se agregaria mediante pseudoelemento) que ocuparía el 100%*/   
}

/* pseudoelemento que se pondría antes de los textos */
.hero__main::before{
    content: '';
    display: block; /*Para que se le pueda darles un height y width y que aparezca visible*/
    height: 300px;
    width: 100%;
    background-image: url('../images/image-intro-mobile.jpg');
    background-size: cover;
    background-position: center;
}

.hero__texts{
    width: 90%;
    margin: 0 auto; /*centro horizontalmente, así mismos*/
    padding: 80px 0; /*80px arriba/abajo 0 a los costados*/
    text-align: center; /*como contenedor, centrar sus textos hijos*/
}

.title{
    font-size: 2.5rem;
    font-family: var(--font1);
    letter-spacing: 3px;
}

.hero__paragraph{
    line-height: 1.5;
    margin-top: 1rem;
}

.cta{
    display: inline-block; /*Sino se pone esto, como que se sobrepone sobre el texto*/
    margin-top: 1.5rem;
    border: 1px solid #fff;
    text-decoration: none;
    color: #fff;
    padding: .8rem 2.2rem;
}

/* DIFFERENT */
.different{
    text-align: center;

}

.title--different{
    padding-top: 30px;
    position: relative;
}

/* Si quiero una rayita antes del titulo se puede lograr asi con un pseudoelemento */
.title--different::before{
    content: '';
    position: absolute; /*Para poder jugar con top, right, left*/
    top: -5px;
    right: 0;
    left: 0;
    display: block; /*Para que se le pueda darles un height y width y que aparezca visible*/
    margin: 0 auto; /*se pude centrar los pseudoelementos*/
    background-color: var(--darkGrayishViolet);
    width: 120px;
    height: 1px;
}

/* flex container de articles */
.different__items{
    margin-top: 3.5rem;
    display: flex;
    flex-direction: column;
    gap: 3rem;
}

.different__icon{
    display: block; /*Los convierto a bloque y de paso se elimina el margen inferior*/
    margin: 0 auto; /*centro de manera horizontal*/
    margin-bottom: 2rem;
}

.different__title{
    font-family: var(--font1);
    font-size: 1.5rem;
    letter-spacing: 3px; /*separacion entre cada letra del titulo*/
}

.different__paragraph{
    margin-top: 1rem;
    color: var(--darkGrayishViolet);
    line-height: 1.5a;
}

/* FIND */
.find{
    padding: 80px 0;
    --paddingContainer: 60px 30px;
}

.find__container{
    position: relative; /*para que podamos darle un position absolute al pseudoelemento*/
    background-color: var(--darkViolet);
    color: #fff;
    text-align: center;
    z-index: 1;
}

.find__container::before{
    content: '';
    position: absolute;
    top: 0; /*arriba*/
    right: 0;/*derecha*/
    width: 50%;
    height: 100%;
    background-image: url('../images/bg-pattern-how-we-work-mobile.svg');
    background-size: cover;
    background-repeat: no-repeat;
    z-index: -1;
}

/* FOOTER */

.footer{
    background-color: var(--veryLightGray);
    position: relative; /*para que podamos darle un position absolute al pseudoelemento*/
    z-index: 1;
}

.footer__brand{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    padding-bottom: 2.5rem;
    margin-bottom: 2.5rem;
    border-bottom: 1px solid var(--darkGrayishViolet);
}

.footer::before{
    content: '';
    position: absolute;
    top: 0; /*arriba*/
    right: 0;/*derecha*/
    width: 100%;
    height:42%;
    background-image: url('../images/bg-pattern-footer-mobile.svg');
    background-size: cover;
    background-repeat: no-repeat;
    z-index: -1;
}

.footer__logo{
    display: block;  /*Los convierto a bloque y de paso se elimina el margen inferior*/
}

.footer__media{
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
}

.footer__navigation{
    display: flex;
    flex-direction: column;
    gap: 3rem;
}

.footer__nav{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
}

.footer__link{
    text-decoration: none;
    color: var(--darkViolet);
    font-weight: 700;
    text-transform: uppercase;
}

.footer__link--first{
    margin-bottom: 1rem;
    color: var(--darkGrayishViolet);
}

@media (min-width: 768px) {

    .nav__links:target{
        clip-path: unset; /*le quitamos el clippat*/
    }
    
    /* cuando nav links esté siendo apuntado, quiero que seleccione a su hermano nav__hamburguer--last( mediante virgulilla ~ ) */
    .nav__links:target ~ .nav__hamburguer--last{
        display: none; /*que no se muestre el icono de cerrar*/
    }
    
    /* En moviles no es visible los links, a menos que se haga visible mediante el btn hamburguer*/
    .nav__links{
        display: flex;        
        gap: 3rem;
        position: unset;        
        flex-direction: row;        
        padding-top: 0;
        background-color: #fff;
        clip-path: unset;
        transition: unset;
    }
    
    .nav__link{        
        color: var(--darkGrayishViolet);        
        padding: .8rem 0; /*.8 rem arriba/abajo y 0 a los costados*/
    }

    .nav__link--cta{
        color: var(--darkViolet);        
        padding: .8rem 2rem; /*.8 rem arriba/abajo y 2rem a los costados*/
    }

    .nav__hamburguer{
        display: none;
    }
    /* el header con la clase hero contiene al menu de navegación y la img */
    .hero{
        background-image: linear-gradient(to bottom, var(--darkViolet) 75%, #fff 75%); /*Que el gradiente vaya hacia abajo, que empiece con el color darkviolet, con un stop al 75% y que termine con un color blanco y un stop del 75% */
    }
  
    .hero__main{
        --paddingContainer: 100px 0;
        width: 90%; /*tiene un hijo (vendria siendo la imagen, que se agregaria mediante pseudoelemento) que ocuparía el 100%*/   
        display: flex;
        justify-content: space-between;
    }
    
    /* pseudoelemento que se pondría antes de los textos */
    .hero__main::before{        
        height: 530px;
        width: 48%;
        background-image: url('../images/image-intro-desktop.jpg');
        order: 1;
    }
    
    .hero__texts{
        position: relative; /* me sirve para poner un borde como mediante el pseudolememento before*/
        width: 49%;
        margin: 0; /*remuevo el centrado*/
        padding: 20px 0 0; /*20px arriba/abajo 0 a los restantes*/
        text-align: left; /*como contenedor, pondrá a la izq sus textos hijos*/
    }
    
    .hero__texts::before{
        position: absolute;
        content: '';
        width: 120px;
        height: 3px;
        top: 0;
        left: 0;
        background-color: #fff;
    }

    .title{
        font-size: 2.7rem;                
    }
    
    /* DIFFERENT */
    .different{
        text-align: left;

    }
   
    /* Si quiero una rayita antes del titulo se puede lograr asi con un pseudoelemento */
    .title--different::before{       
        margin: 0; /*Para que el pseudoelemento se mueva al principio*/       
    }

    /* flex container de articles */
    .different__items{              
        flex-direction: row;
        gap: 2rem;
    }
    /* flex item,  */
    .different__item{
        flex: 1; /*Para que todos los elementos repartar sus contendidos de manera equitativamente*/
    }

    .different__icon{
        margin-left: 0;
    }


    /* FIND */
    .find{
        --paddingContainer: 60px;
    }

    .find__container{
        display: flex;
        justify-content: space-between; /*distribuye los elementos empezando desde los costados/esquinas hasta llegar al centro*/
        align-items: center; /*alinee los flex item horizontalmente*/
        text-align: center;
    }

    .find__container::before{      
        background-image: url('../images/bg-pattern-how-we-work-desktop.svg');  /*Lo unico que se cambia es la imagen*/     
    }

    .title--find{
        width:60%;
    }

    /* FOOTER */
    .footer__brand{        
        flex-direction: row;
        justify-content: space-between; /*distribuye los elementos empezando desde los costados/esquinas hasta llegar al centro*/
        gap: 0;
    }

    .footer::before{        
        top: 0; /*arriba*/
        left: 0;/*izquierda*/
        width: 50%;
        height:60%;
        background-image: url('../images/bg-pattern-footer-desktop.svg');
        background-size: cover;
        background-repeat: no-repeat;
        z-index: -1;
    }

 
    .footer__navigation{
        
        flex-direction: row;
        justify-content: space-between;        
    }

    /* 
        Según el valor indicado, el main axis/cross axis, será:
        row: horizontal, izquierda a derecha ------ cross Axis es vertical, de arriba a abajo
        column: vertical, de arriba hacia abajo ------ el cross axis es horizontal, se vuelve de izquierda a derecha
        row-reverse: horizontal, derecha a izquierda ------ el cross axis es vertical, abajo a arriba
        column-reverse: vertical, de abajo hacia arriba ------ el cross axis es horizontal, se vuelve de derecha a izquierda
    */
    .footer__nav{
        width: 20%; /*tamaño base de cada flex item*/
        align-items: flex-start; /*manda los elementos al principio del cross axis (eje secundario) horizontal su sentido es dizquierda a derecha*/
    }
      
}